//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

//------------------------------------------------------------------------------


namespace Compliance.EarlyBound
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum opc_complaintState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Represents a complaint from a citizen or the Commissioner against an organization, an institution or a field and its resolution.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("opc_complaint")]
	public partial class opc_complaint : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public opc_complaint() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "opc_complaint";
		
		public const string EntitySchemaName = "opc_complaint";
		
		public const string PrimaryIdAttribute = "opc_complaintid";
		
		public const string PrimaryNameAttribute = "opc_number";
		
		public const string EntityLogicalCollectionName = "opc_complaints";
		
		public const string EntitySetName = "opc_complaints";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date when the complaint has been officially accepted by the registrar/intake manager
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_acceptancedate")]
		public System.Nullable<System.DateTime> opc_acceptancedate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opc_acceptancedate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_acceptancedate");
				this.SetAttributeValue("opc_acceptancedate", value);
				this.OnPropertyChanged("opc_acceptancedate");
			}
		}
		
		/// <summary>
		/// Define who the complaint is targetting
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_accountid")]
		public Microsoft.Xrm.Sdk.EntityReference opc_accountid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_accountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_accountid");
				this.SetAttributeValue("opc_accountid", value);
				this.OnPropertyChanged("opc_accountid");
			}
		}
		
		/// <summary>
		/// The numeric value of the actual risk appetite
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_actualriskappetitevalue")]
		public System.Nullable<int> opc_actualriskappetitevalue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opc_actualriskappetitevalue");
			}
		}
		
		/// <summary>
		/// Last Updated time of rollup field Actual Risk Appetite (Value).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_actualriskappetitevalue_date")]
		public System.Nullable<System.DateTime> opc_actualriskappetitevalue_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opc_actualriskappetitevalue_date");
			}
		}
		
		/// <summary>
		/// State of rollup field Actual Risk Appetite (Value).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_actualriskappetitevalue_state")]
		public System.Nullable<int> opc_actualriskappetitevalue_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opc_actualriskappetitevalue_state");
			}
		}
		
		/// <summary>
		/// Date the complaint was closed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_closeddate")]
		public System.Nullable<System.DateTime> opc_closeddate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opc_closeddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_closeddate");
				this.SetAttributeValue("opc_closeddate", value);
				this.OnPropertyChanged("opc_closeddate");
			}
		}
		
		/// <summary>
		/// Reason to close this complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_closereason")]
		public virtual opc_CloseReason? opc_closereason
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_CloseReason?)(EntityOptionSetEnum.GetEnum(this, "opc_closereason")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_closereason");
				this.SetAttributeValue("opc_closereason", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_closereason");
			}
		}
		
		/// <summary>
		/// The contact who filed the complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainant")]
		public Microsoft.Xrm.Sdk.EntityReference opc_complainant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_complainant");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complainant");
				this.SetAttributeValue("opc_complainant", value);
				this.OnPropertyChanged("opc_complainant");
			}
		}
		
		/// <summary>
		/// Legal representative of a complainant for a complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantlegalrepresentative")]
		public Microsoft.Xrm.Sdk.EntityReference opc_complainantlegalrepresentative
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_complainantlegalrepresentative");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complainantlegalrepresentative");
				this.SetAttributeValue("opc_complainantlegalrepresentative", value);
				this.OnPropertyChanged("opc_complainantlegalrepresentative");
			}
		}
		
		/// <summary>
		/// Legal firm representing the complainant. The complainant legal representative works for (or is resourced by) this firm
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantlegalrepresentativefirm")]
		public Microsoft.Xrm.Sdk.EntityReference opc_complainantlegalrepresentativefirm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_complainantlegalrepresentativefirm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complainantlegalrepresentativefirm");
				this.SetAttributeValue("opc_complainantlegalrepresentativefirm", value);
				this.OnPropertyChanged("opc_complainantlegalrepresentativefirm");
			}
		}
		
		/// <summary>
		/// Indicates the perceived priorities of the complainant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantperceivedpriorities")]
		public virtual System.Collections.Generic.IEnumerable<opc_PerceivedPriorities> opc_complainantperceivedpriorities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<opc_PerceivedPriorities>(this, "opc_complainantperceivedpriorities");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complainantperceivedpriorities");
				this.SetAttributeValue("opc_complainantperceivedpriorities", EntityOptionSetEnum.GetMultiEnum(this, "opc_complainantperceivedpriorities", value));
				this.OnPropertyChanged("opc_complainantperceivedpriorities");
			}
		}
		
		/// <summary>
		/// Representative of a complainant for a complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantrep")]
		public Microsoft.Xrm.Sdk.EntityReference opc_complainantrep
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_complainantrep");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complainantrep");
				this.SetAttributeValue("opc_complainantrep", value);
				this.OnPropertyChanged("opc_complainantrep");
			}
		}
		
		/// <summary>
		/// Indicates if the complainant report has been drafted
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantreportdrafted")]
		public System.Nullable<bool> opc_complainantreportdrafted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_complainantreportdrafted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complainantreportdrafted");
				this.SetAttributeValue("opc_complainantreportdrafted", value);
				this.OnPropertyChanged("opc_complainantreportdrafted");
			}
		}
		
		/// <summary>
		/// Determines why is a complaint being closed/inactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complaintdisposition")]
		public virtual opc_ComplaintDisposition? opc_complaintdisposition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_ComplaintDisposition?)(EntityOptionSetEnum.GetEnum(this, "opc_complaintdisposition")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaintdisposition");
				this.SetAttributeValue("opc_complaintdisposition", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_complaintdisposition");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complaintid")]
		public System.Nullable<System.Guid> opc_complaintId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("opc_complaintid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaintId");
				this.SetAttributeValue("opc_complaintid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("opc_complaintId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complaintid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.opc_complaintId = value;
			}
		}
		
		/// <summary>
		/// Date the complaint was received.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complaintreceiveddate")]
		public System.Nullable<System.DateTime> opc_complaintreceiveddate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opc_complaintreceiveddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaintreceiveddate");
				this.SetAttributeValue("opc_complaintreceiveddate", value);
				this.OnPropertyChanged("opc_complaintreceiveddate");
			}
		}
		
		/// <summary>
		/// The complaint's approval status at ER.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_erapproval")]
		public virtual opc_ERApproval? opc_erapproval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_ERApproval?)(EntityOptionSetEnum.GetEnum(this, "opc_erapproval")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_erapproval");
				this.SetAttributeValue("opc_erapproval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_erapproval");
			}
		}
		
		/// <summary>
		/// Disposition for Early Resolution
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_erdisposition")]
		public virtual opc_ERDisposition? opc_erdisposition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_ERDisposition?)(EntityOptionSetEnum.GetEnum(this, "opc_erdisposition")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_erdisposition");
				this.SetAttributeValue("opc_erdisposition", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_erdisposition");
			}
		}
		
		/// <summary>
		/// Early Resolution Officer working on the complaint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_erofficer")]
		public Microsoft.Xrm.Sdk.EntityReference opc_erofficer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_erofficer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_erofficer");
				this.SetAttributeValue("opc_erofficer", value);
				this.OnPropertyChanged("opc_erofficer");
			}
		}
		
		/// <summary>
		/// Indicates if the request to escalate the complaint to investigations is approved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_escalationapproved")]
		public System.Nullable<bool> opc_escalationapproved
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_escalationapproved");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_escalationapproved");
				this.SetAttributeValue("opc_escalationapproved", value);
				this.OnPropertyChanged("opc_escalationapproved");
			}
		}
		
		/// <summary>
		/// Determines if the Complaint is associated with an Access Allegation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_hasaccessallegation")]
		public System.Nullable<bool> opc_hasaccessallegation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_hasaccessallegation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_hasaccessallegation");
				this.SetAttributeValue("opc_hasaccessallegation", value);
				this.OnPropertyChanged("opc_hasaccessallegation");
			}
		}
		
		/// <summary>
		/// Determines if the Complaint is associated with an TL Allegation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_hastlallegation")]
		public System.Nullable<bool> opc_hastlallegation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_hastlallegation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_hastlallegation");
				this.SetAttributeValue("opc_hastlallegation", value);
				this.OnPropertyChanged("opc_hastlallegation");
			}
		}
		
		/// <summary>
		/// Defines the dispositions to move out of the intake phase.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_intakedisposition")]
		public virtual opc_intakedisposition? opc_intakedisposition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_intakedisposition?)(EntityOptionSetEnum.GetEnum(this, "opc_intakedisposition")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_intakedisposition");
				this.SetAttributeValue("opc_intakedisposition", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_intakedisposition");
			}
		}
		
		/// <summary>
		/// The intake officer working on this complaint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_intakeofficer")]
		public Microsoft.Xrm.Sdk.EntityReference opc_intakeofficer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_intakeofficer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_intakeofficer");
				this.SetAttributeValue("opc_intakeofficer", value);
				this.OnPropertyChanged("opc_intakeofficer");
			}
		}
		
		/// <summary>
		/// Last milestone for the complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_lastmilestone")]
		public virtual opc_ComplaintMilestone? opc_lastmilestone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_ComplaintMilestone?)(EntityOptionSetEnum.GetEnum(this, "opc_lastmilestone")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_lastmilestone");
				this.SetAttributeValue("opc_lastmilestone", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_lastmilestone");
			}
		}
		
		/// <summary>
		/// Legislation related to the complaint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_legislation")]
		public Microsoft.Xrm.Sdk.EntityReference opc_legislation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_legislation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_legislation");
				this.SetAttributeValue("opc_legislation", value);
				this.OnPropertyChanged("opc_legislation");
			}
		}
		
		/// <summary>
		/// Indicates whether a Member of Parliament was involved in the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_memberofparliamentinvolved")]
		public System.Nullable<bool> opc_memberofparliamentinvolved
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_memberofparliamentinvolved");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_memberofparliamentinvolved");
				this.SetAttributeValue("opc_memberofparliamentinvolved", value);
				this.OnPropertyChanged("opc_memberofparliamentinvolved");
			}
		}
		
		/// <summary>
		/// This field determines if the complainant his part of the Multiple Complaint Strategy.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_multiplecomplaintstrategy")]
		public virtual opc_MultipleComplaintStrategy? opc_multiplecomplaintstrategy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_MultipleComplaintStrategy?)(EntityOptionSetEnum.GetEnum(this, "opc_multiplecomplaintstrategy")));
			}
		}
		
		/// <summary>
		/// Indicates next action to take on the file
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_nextstep")]
		public virtual opc_NextStep? opc_nextstep
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_NextStep?)(EntityOptionSetEnum.GetEnum(this, "opc_nextstep")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_nextstep");
				this.SetAttributeValue("opc_nextstep", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_nextstep");
			}
		}
		
		/// <summary>
		/// The complaint number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_number")]
		public string opc_number
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("opc_number");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_number");
				this.SetAttributeValue("opc_number", value);
				this.OnPropertyChanged("opc_number");
			}
		}
		
		/// <summary>
		/// The OPC priority of the Complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_opcpriorityid")]
		public Microsoft.Xrm.Sdk.EntityReference opc_opcpriorityid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_opcpriorityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_opcpriorityid");
				this.SetAttributeValue("opc_opcpriorityid", value);
				this.OnPropertyChanged("opc_opcpriorityid");
			}
		}
		
		/// <summary>
		/// Reason the complaint requires further investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_reasontorequirefurtherinvestigation")]
		public virtual System.Collections.Generic.IEnumerable<opc_ReasontoRequireFurtherInvestigation> opc_reasontorequirefurtherinvestigation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<opc_ReasontoRequireFurtherInvestigation>(this, "opc_reasontorequirefurtherinvestigation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_reasontorequirefurtherinvestigation");
				this.SetAttributeValue("opc_reasontorequirefurtherinvestigation", EntityOptionSetEnum.GetMultiEnum(this, "opc_reasontorequirefurtherinvestigation", value));
				this.OnPropertyChanged("opc_reasontorequirefurtherinvestigation");
			}
		}
		
		/// <summary>
		/// Recommend to registrar
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_recommendtoregistrar")]
		public virtual opc_YesorNo? opc_recommendtoregistrar
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_YesorNo?)(EntityOptionSetEnum.GetEnum(this, "opc_recommendtoregistrar")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_recommendtoregistrar");
				this.SetAttributeValue("opc_recommendtoregistrar", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_recommendtoregistrar");
			}
		}
		
		/// <summary>
		/// Responsible to redact the report
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_reportredactor")]
		public Microsoft.Xrm.Sdk.EntityReference opc_reportredactor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_reportredactor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_reportredactor");
				this.SetAttributeValue("opc_reportredactor", value);
				this.OnPropertyChanged("opc_reportredactor");
			}
		}
		
		/// <summary>
		/// Determines if the report was requested
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_reportrequested")]
		public System.Nullable<bool> opc_reportrequested
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_reportrequested");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_reportrequested");
				this.SetAttributeValue("opc_reportrequested", value);
				this.OnPropertyChanged("opc_reportrequested");
			}
		}
		
		/// <summary>
		/// Identify whether or not the signed authorization form was provided. This is only required if there is a representative identified
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_representativeauthorizationprovided")]
		public System.Nullable<bool> opc_representativeauthorizationprovided
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_representativeauthorizationprovided");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_representativeauthorizationprovided");
				this.SetAttributeValue("opc_representativeauthorizationprovided", value);
				this.OnPropertyChanged("opc_representativeauthorizationprovided");
			}
		}
		
		/// <summary>
		/// Indicates if the complaint requires further investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_requiresfurtherinvestigation")]
		public System.Nullable<bool> opc_requiresfurtherinvestigation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_requiresfurtherinvestigation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_requiresfurtherinvestigation");
				this.SetAttributeValue("opc_requiresfurtherinvestigation", value);
				this.OnPropertyChanged("opc_requiresfurtherinvestigation");
			}
		}
		
		/// <summary>
		/// Indicates if the complaint requires a report
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_requiresreport")]
		public System.Nullable<bool> opc_requiresreport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_requiresreport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_requiresreport");
				this.SetAttributeValue("opc_requiresreport", value);
				this.OnPropertyChanged("opc_requiresreport");
			}
		}
		
		/// <summary>
		/// How the complaint was resolved
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_resolution")]
		public virtual System.Collections.Generic.IEnumerable<opc_ComplaintResolution> opc_Resolution
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<opc_ComplaintResolution>(this, "opc_resolution");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_Resolution");
				this.SetAttributeValue("opc_resolution", EntityOptionSetEnum.GetMultiEnum(this, "opc_resolution", value));
				this.OnPropertyChanged("opc_Resolution");
			}
		}
		
		/// <summary>
		/// Indicates the relationship between the respondent and the complainant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentandcomplainantrelationship")]
		public virtual opc_RespondentandComplainantRelationship? opc_respondentandcomplainantrelationship
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_RespondentandComplainantRelationship?)(EntityOptionSetEnum.GetEnum(this, "opc_respondentandcomplainantrelationship")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_respondentandcomplainantrelationship");
				this.SetAttributeValue("opc_respondentandcomplainantrelationship", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_respondentandcomplainantrelationship");
			}
		}
		
		/// <summary>
		/// The lawyer or contact who works for (or is resourced by) the respondent representative firm to handle this complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentlegalrepresentative")]
		public Microsoft.Xrm.Sdk.EntityReference opc_respondentlegalrepresentative
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_respondentlegalrepresentative");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_respondentlegalrepresentative");
				this.SetAttributeValue("opc_respondentlegalrepresentative", value);
				this.OnPropertyChanged("opc_respondentlegalrepresentative");
			}
		}
		
		/// <summary>
		/// The law firm or organization representing the respondent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentlegalrepresentativefirm")]
		public Microsoft.Xrm.Sdk.EntityReference opc_respondentlegalrepresentativefirm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_respondentlegalrepresentativefirm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_respondentlegalrepresentativefirm");
				this.SetAttributeValue("opc_respondentlegalrepresentativefirm", value);
				this.OnPropertyChanged("opc_respondentlegalrepresentativefirm");
			}
		}
		
		/// <summary>
		/// Indicates if the respondent report has been drafted
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentreportdrafted")]
		public System.Nullable<bool> opc_respondentreportdrafted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_respondentreportdrafted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_respondentreportdrafted");
				this.SetAttributeValue("opc_respondentreportdrafted", value);
				this.OnPropertyChanged("opc_respondentreportdrafted");
			}
		}
		
		/// <summary>
		/// An employee or representative of the respondent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentrepresentative")]
		public Microsoft.Xrm.Sdk.EntityReference opc_respondentrepresentative
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("opc_respondentrepresentative");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_respondentrepresentative");
				this.SetAttributeValue("opc_respondentrepresentative", value);
				this.OnPropertyChanged("opc_respondentrepresentative");
			}
		}
		
		/// <summary>
		/// If the complaint is closed, this indicates if the close letter has been sent to the complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_sendcloseletter")]
		public System.Nullable<bool> opc_sendcloseletter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("opc_sendcloseletter");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_sendcloseletter");
				this.SetAttributeValue("opc_sendcloseletter", value);
				this.OnPropertyChanged("opc_sendcloseletter");
			}
		}
		
		/// <summary>
		/// The service level agreement date for handling this complaint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_sladate")]
		public System.Nullable<System.DateTime> opc_sladate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opc_sladate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_sladate");
				this.SetAttributeValue("opc_sladate", value);
				this.OnPropertyChanged("opc_sladate");
			}
		}
		
		/// <summary>
		/// The source of the complaint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_source")]
		public virtual opc_ComplaintSource? opc_source
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_ComplaintSource?)(EntityOptionSetEnum.GetEnum(this, "opc_source")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_source");
				this.SetAttributeValue("opc_source", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("opc_source");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("processid");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("processid");
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("stageid");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("stageid");
			}
		}
		
		/// <summary>
		/// Status of the Complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Compliance.EarlyBound.opc_complaintState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Compliance.EarlyBound.opc_complaintState)(System.Enum.ToObject(typeof(Compliance.EarlyBound.opc_complaintState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual opc_complaintStatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((opc_complaintStatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("traversedpath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("traversedpath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N bpf_opc_complaint_opc_individualcomplaint_bp
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bpf_opc_complaint_opc_individualcomplaint_bp")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_individualcomplaint_bp> bpf_opc_complaint_opc_individualcomplaint_bp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_individualcomplaint_bp>("bpf_opc_complaint_opc_individualcomplaint_bp", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bpf_opc_complaint_opc_individualcomplaint_bp");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_individualcomplaint_bp>("bpf_opc_complaint_opc_individualcomplaint_bp", null, value);
				this.OnPropertyChanged("bpf_opc_complaint_opc_individualcomplaint_bp");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_allegations_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_allegations_complaint")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_allegation> opc_complaint_allegations_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_allegation>("opc_complaint_allegations_complaint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_allegations_complaint");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_allegation>("opc_complaint_allegations_complaint", null, value);
				this.OnPropertyChanged("opc_complaint_allegations_complaint");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_Annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_Annotations")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.Annotation> opc_complaint_Annotations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.Annotation>("opc_complaint_Annotations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_Annotations");
				this.SetRelatedEntities<Compliance.EarlyBound.Annotation>("opc_complaint_Annotations", null, value);
				this.OnPropertyChanged("opc_complaint_Annotations");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_issues_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_issues_complaint")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_issue> opc_complaint_issues_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_issue>("opc_complaint_issues_complaint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_issues_complaint");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_issue>("opc_complaint_issues_complaint", null, value);
				this.OnPropertyChanged("opc_complaint_issues_complaint");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_notifications_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_notifications_complaint")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_notification> opc_complaint_notifications_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_notification>("opc_complaint_notifications_complaint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_notifications_complaint");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_notification>("opc_complaint_notifications_complaint", null, value);
				this.OnPropertyChanged("opc_complaint_notifications_complaint");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_opc_events
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_opc_events")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_event> opc_complaint_opc_events
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_event>("opc_complaint_opc_events", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_opc_events");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_event>("opc_complaint_opc_events", null, value);
				this.OnPropertyChanged("opc_complaint_opc_events");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_recommendations_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_recommendations_complaint")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_recommendation> opc_complaint_recommendations_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_recommendation>("opc_complaint_recommendations_complaint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_recommendations_complaint");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_recommendation>("opc_complaint_recommendations_complaint", null, value);
				this.OnPropertyChanged("opc_complaint_recommendations_complaint");
			}
		}
		
		/// <summary>
		/// 1:N opc_complaint_reminders_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_reminders_complaint")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_reminder> opc_complaint_reminders_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_reminder>("opc_complaint_reminders_complaint", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_reminders_complaint");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_reminder>("opc_complaint_reminders_complaint", null, value);
				this.OnPropertyChanged("opc_complaint_reminders_complaint");
			}
		}
		
		/// <summary>
		/// 1:N opc_RiskAssessment_Complaint_opc_complain
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_RiskAssessment_Complaint_opc_complain")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_RiskAssessment> opc_RiskAssessment_Complaint_opc_complain
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_RiskAssessment>("opc_RiskAssessment_Complaint_opc_complain", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_RiskAssessment_Complaint_opc_complain");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_RiskAssessment>("opc_RiskAssessment_Complaint_opc_complain", null, value);
				this.OnPropertyChanged("opc_RiskAssessment_Complaint_opc_complain");
			}
		}
		
		/// <summary>
		/// N:N opc_complaints_industries_relatedindustries
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaints_industries_relatedindustries")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_industry> opc_complaints_industries_relatedindustries
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_industry>("opc_complaints_industries_relatedindustries", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaints_industries_relatedindustries");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_industry>("opc_complaints_industries_relatedindustries", null, value);
				this.OnPropertyChanged("opc_complaints_industries_relatedindustries");
			}
		}
		
		/// <summary>
		/// N:N opc_complaints_topics_relatedtopics
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaints_topics_relatedtopics")]
		public System.Collections.Generic.IEnumerable<Compliance.EarlyBound.opc_topic> opc_complaints_topics_relatedtopics
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Compliance.EarlyBound.opc_topic>("opc_complaints_topics_relatedtopics", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaints_topics_relatedtopics");
				this.SetRelatedEntities<Compliance.EarlyBound.opc_topic>("opc_complaints_topics_relatedtopics", null, value);
				this.OnPropertyChanged("opc_complaints_topics_relatedtopics");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_opc_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_opc_complaint")]
		public Compliance.EarlyBound.BusinessUnit business_unit_opc_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.BusinessUnit>("business_unit_opc_complaint", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opc_complaint_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opc_complaint_createdby")]
		public Compliance.EarlyBound.SystemUser lk_opc_complaint_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("lk_opc_complaint_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opc_complaint_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opc_complaint_createdonbehalfby")]
		public Compliance.EarlyBound.SystemUser lk_opc_complaint_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("lk_opc_complaint_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_opc_complaint_createdonbehalfby");
				this.SetRelatedEntity<Compliance.EarlyBound.SystemUser>("lk_opc_complaint_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_opc_complaint_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_opc_complaint_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opc_complaint_modifiedby")]
		public Compliance.EarlyBound.SystemUser lk_opc_complaint_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("lk_opc_complaint_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_opc_complaint_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opc_complaint_modifiedonbehalfby")]
		public Compliance.EarlyBound.SystemUser lk_opc_complaint_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("lk_opc_complaint_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_opc_complaint_modifiedonbehalfby");
				this.SetRelatedEntity<Compliance.EarlyBound.SystemUser>("lk_opc_complaint_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_opc_complaint_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 opc_complaint_intakeofficer_SystemUser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_intakeofficer")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_complaint_intakeofficer_SystemUser")]
		public Compliance.EarlyBound.SystemUser opc_complaint_intakeofficer_SystemUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("opc_complaint_intakeofficer_SystemUser", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_complaint_intakeofficer_SystemUser");
				this.SetRelatedEntity<Compliance.EarlyBound.SystemUser>("opc_complaint_intakeofficer_SystemUser", null, value);
				this.OnPropertyChanged("opc_complaint_intakeofficer_SystemUser");
			}
		}
		
		/// <summary>
		/// N:1 opc_contact_complaints_complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainant")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_contact_complaints_complainant")]
		public Compliance.EarlyBound.Contact opc_contact_complaints_complainant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_complainant", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_contact_complaints_complainant");
				this.SetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_complainant", null, value);
				this.OnPropertyChanged("opc_contact_complaints_complainant");
			}
		}
		
		/// <summary>
		/// N:1 opc_contact_complaints_complainantlegalrep
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantlegalrepresentative")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_contact_complaints_complainantlegalrep")]
		public Compliance.EarlyBound.Contact opc_contact_complaints_complainantlegalrep
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_complainantlegalrep", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_contact_complaints_complainantlegalrep");
				this.SetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_complainantlegalrep", null, value);
				this.OnPropertyChanged("opc_contact_complaints_complainantlegalrep");
			}
		}
		
		/// <summary>
		/// N:1 opc_contact_complaints_complainantreps
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_complainantrep")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_contact_complaints_complainantreps")]
		public Compliance.EarlyBound.Contact opc_contact_complaints_complainantreps
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_complainantreps", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_contact_complaints_complainantreps");
				this.SetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_complainantreps", null, value);
				this.OnPropertyChanged("opc_contact_complaints_complainantreps");
			}
		}
		
		/// <summary>
		/// N:1 opc_contact_complaints_repondentrep
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentrepresentative")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_contact_complaints_repondentrep")]
		public Compliance.EarlyBound.Contact opc_contact_complaints_repondentrep
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_repondentrep", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_contact_complaints_repondentrep");
				this.SetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_repondentrep", null, value);
				this.OnPropertyChanged("opc_contact_complaints_repondentrep");
			}
		}
		
		/// <summary>
		/// N:1 opc_contact_complaints_respondentlegalrep
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_respondentlegalrepresentative")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_contact_complaints_respondentlegalrep")]
		public Compliance.EarlyBound.Contact opc_contact_complaints_respondentlegalrep
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_respondentlegalrep", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_contact_complaints_respondentlegalrep");
				this.SetRelatedEntity<Compliance.EarlyBound.Contact>("opc_contact_complaints_respondentlegalrep", null, value);
				this.OnPropertyChanged("opc_contact_complaints_respondentlegalrep");
			}
		}
		
		/// <summary>
		/// N:1 opc_legislation_complaints_legislation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_legislation")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_legislation_complaints_legislation")]
		public Compliance.EarlyBound.opc_legislation opc_legislation_complaints_legislation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.opc_legislation>("opc_legislation_complaints_legislation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_legislation_complaints_legislation");
				this.SetRelatedEntity<Compliance.EarlyBound.opc_legislation>("opc_legislation_complaints_legislation", null, value);
				this.OnPropertyChanged("opc_legislation_complaints_legislation");
			}
		}
		
		/// <summary>
		/// N:1 opc_opcpriority_complaints_opcpriority
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_opcpriorityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_opcpriority_complaints_opcpriority")]
		public Compliance.EarlyBound.opc_opcpriority opc_opcpriority_complaints_opcpriority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.opc_opcpriority>("opc_opcpriority_complaints_opcpriority", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_opcpriority_complaints_opcpriority");
				this.SetRelatedEntity<Compliance.EarlyBound.opc_opcpriority>("opc_opcpriority_complaints_opcpriority", null, value);
				this.OnPropertyChanged("opc_opcpriority_complaints_opcpriority");
			}
		}
		
		/// <summary>
		/// N:1 opc_user_complaints_erofficer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_erofficer")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_user_complaints_erofficer")]
		public Compliance.EarlyBound.SystemUser opc_user_complaints_erofficer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("opc_user_complaints_erofficer", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_user_complaints_erofficer");
				this.SetRelatedEntity<Compliance.EarlyBound.SystemUser>("opc_user_complaints_erofficer", null, value);
				this.OnPropertyChanged("opc_user_complaints_erofficer");
			}
		}
		
		/// <summary>
		/// N:1 opc_user_complaints_reportredactor
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opc_reportredactor")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opc_user_complaints_reportredactor")]
		public Compliance.EarlyBound.SystemUser opc_user_complaints_reportredactor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("opc_user_complaints_reportredactor", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("opc_user_complaints_reportredactor");
				this.SetRelatedEntity<Compliance.EarlyBound.SystemUser>("opc_user_complaints_reportredactor", null, value);
				this.OnPropertyChanged("opc_user_complaints_reportredactor");
			}
		}
		
		/// <summary>
		/// N:1 team_opc_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_opc_complaint")]
		public Compliance.EarlyBound.Team team_opc_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.Team>("team_opc_complaint", null);
			}
		}
		
		/// <summary>
		/// N:1 user_opc_complaint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_opc_complaint")]
		public Compliance.EarlyBound.SystemUser user_opc_complaint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Compliance.EarlyBound.SystemUser>("user_opc_complaint", null);
			}
		}
	}
}